name: Docker Image CI/CD

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Get repository release tag
        id: timeseries
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          excludes: prerelease, draft
          repository: ${{ github.repository }}
      # - name: Build Docker image
      #   run: |
      #     docker build --network=host -t ${{secrets.DOCKER_USER}}/erp:latest -t ${{secrets.DOCKER_USER}}/erp:${{ steps.timeseries.outputs.release }} .
  # scan:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:  
  #     - name: Run Trivy vulnerability scanner
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         image-ref: 'docker.io/${{secrets.DOCKER_USER}}/erp:${{ steps.timeseries.outputs.release }}'
  #         format: 'table'
  #         exit-code: '1'
  #         ignore-unfixed: true
  #         vuln-type: 'os,library'
  #         severity: 'CRITICAL,HIGH'
  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: 'trivy-results.sarif'
  # release:  
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - name: Docker push image
  #       run: |
  #         docker push ${{secrets.DOCKER_USER}}/erp
  #         docker push ${{secrets.DOCKER_USER}}/erp:${{ steps.timeseries.outputs.release }}
  staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Deployment to Staging
        run: |
          cd kubectl/staging
          sed -i 's|APP_VERSION:.*|APP_VERSION: '${{ steps.timeseries.outputs.release }}'|' values.yml 
          if ! git diff --exit-code; then
              git add values.yml
          fi
      - name: Commit and push changes
        uses: devops-infra/action-commit-push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: "[AUTO] Update Values.yml"
      - name: Create pull request
        uses: devops-infra/action-pull-request@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: "**Automated pull request**<br><br>Replaced foo/bar"
          title: ${{ github.event.commits[0].message }}